#!/usr/bin/env python

""" This is the entry point for ngi_reports.
"""

import argparse
import jinja2
import os

from datetime import datetime

from ngi_reports.log import loggers
from ngi_reports.common import config as report_config

LOG = loggers.minimal_logger('NGI Reports')
config = report_config.load_config()

def make_report (report_type, working_dir=os.getcwd()):
    
    # Setup
    template_fn = '{}.md'.format(report_type)
    LOG.info('Creating report type: {}'.format(report_type))
    
    # Set up the jinja environment
    templates_dir = os.path.realpath(os.path.join(os.path.dirname(__file__), '../data/report_templates/'))
    env = jinja2.Environment(loader=jinja2.FileSystemLoader(templates_dir))
    
    # Load our template
    template = env.get_template(template_fn)
    
    # Import the module for this report type
    report_mod = __import__('ngi_reports.common.{}'.format(report_type), fromlist=['ngi_reports.common'])
    
    # Get fields from module
    fields = report_mod.get_fields(config, working_dir)
    
    # Basic Fields
    fields['report']['support_email'] = config.get('ngi_reports', 'support_email')
    fields['report']['date'] = datetime.today().strftime('%Y-%m-%d')

    # Print the output
    print template.render(report=fields['report'], project=fields['project'], sample=fields['sample'])









if __name__ == "__main__":
    parser = argparse.ArgumentParser("Make an NGI Report")
    parser.add_argument("-d", "--dir", dest="working_dir",
        help="Working Directory. Default: cwd when script is executed.")
    parser.add_argument('report_type',  metavar='<report type>',
        help="Type of report to generate")

    kwargs = vars(parser.parse_args())
    
    make_report(**kwargs)